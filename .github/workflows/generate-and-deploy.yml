name: Generate and Deploy Terraform Resources

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Discover resources and generate workflow
        id: generate
        run: |
          # Descubrir recursos
          RESOURCES=$(find . -maxdepth 1 -type d -not -path '.' -not -path './.*' -exec basename {} \;)
          
          # Crear el YAML dinámico
          cat << 'EOF' > .github/workflows/dynamic-deploy.yml
          name: Dynamic Deploy Terraform Resources

          on:
            workflow_call:

          env:

            ENVIRONMENTS: dev pre pro

          jobs:
          EOF

          # Añadir un job por cada recurso
          for RESOURCE in $RESOURCES; do
            cat << EOF >> .github/workflows/dynamic-deploy.yml
            $RESOURCE:
              runs-on: ubuntu-latest
              steps:
                - name: Checkout repository
                  uses: actions/checkout@v4

                - name: Setup Terraform
                  uses: hashicorp/setup-terraform@v3
                  with:
                    terraform_version: 1.5.0

                - name: Deploy Terraform for $RESOURCE
                  env:
                    ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
                    ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
                    ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
                    ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
                  run: |
                    for ENV in \$ENVIRONMENTS; do
                      echo "Deploying $RESOURCE in \$ENV..."
                      cd "$RESOURCE/\$ENV"
                      terraform init -backend-config="storage_account_name=\$AZURE_STORAGE_ACCOUNT" \\
                                     -backend-config="container_name=\$CONTAINER_NAME" \\
                                     -backend-config="access_key=\$AZURE_STORAGE_KEY" \\
                                     -backend-config="key=$RESOURCE-\$ENV.tfstate"
                      terraform apply -auto-approve
                      cd ../..
                    done
          EOF
          done

      - name: Commit and push generated workflow
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add .github/workflows/dynamic-deploy.yml
          git commit -m "Generate dynamic workflow for resources"
          git push

      - name: Trigger dynamic workflow
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'dynamic-deploy.yml',
              ref: 'main'
            });