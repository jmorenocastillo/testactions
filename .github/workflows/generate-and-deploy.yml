name: Dynamic Resource Workflow

on:
  workflow_dispatch:
    inputs:
      resource:
        description: 'Recurso a procesar (e.g., recurso1)'
        required: true
        type: string

jobs:
  discover-resources:
    runs-on: ubuntu-latest
    outputs:
      resources: ${{ steps.set-resources.outputs.resources }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List resource folders
        id: set-resources
        run: |
          resources="[]"
          if [ -d "resources" ]; then
            resources=$(find resources -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | jq -R . | jq -s -c .)
          fi
          echo "resources=$resources" >> $GITHUB_OUTPUT
          echo "Available resources: $(echo "$resources" | jq -c .)"
      - name: Debug resources
        run: |
          echo "Raw resources output: $resources"
          echo "GITHUB_OUTPUT contents:"
          cat $GITHUB_OUTPUT

  validate-input:
    needs: discover-resources
    runs-on: ubuntu-latest
    steps:
      - name: Validate selected resource
        run: |
          resources_list='${{ needs.discover-resources.outputs.resources }}'
          input_resource='${{ github.event.inputs.resource }}'
          if ! echo "$resources_list" | jq -e --arg res "$input_resource" '. | index($res)' > /dev/null; then
            echo "Error: Resource '$input_resource' not found in available resources: $resources_list"
            exit 1
          fi

  process-resource:
    needs: [discover-resources, validate-input]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check directory
        run: |
          resource='${{ github.event.inputs.resource }}'
          if [ -d "resources/$resource" ]; then
            echo "Directory exists: resources/$resource"
            ls -l resources/$resource
          else
            echo "Error: Directory resources/$resource not found"
            exit 1
          fi
      - name: Check deploy.sh
        run: |
          resource='${{ github.event.inputs.resource }}'
          if [ -f "resources/$resource/deploy.sh" ]; then
            echo "deploy.sh found"
            cat resources/$resource/deploy.sh
          else
            echo "Error: deploy.sh not found in resources/$resource"
            exit 1
          fi
      - name: Set execute permissions
        run: chmod +x resources/${{ github.event.inputs.resource }}/deploy.sh
      - name: Run deploy.sh with debug
        run: bash -x resources/${{ github.event.inputs.resource }}/deploy.sh