name: Dynamic Resource Jobs

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  discover-resources:
    runs-on: ubuntu-latest
    outputs:
      resources: ${{ steps.set-resources.outputs.resources }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List resource folders
        id: set-resources
        run: |
          # Escanea las carpetas en resources/ y genera una lista JSON
          resources=$(ls -d resources/*/ | xargs -n 1 basename | jq -R . | jq -s .)
          echo "resources=$resources" >> $GITHUB_OUTPUT

  process-resources:
    needs: discover-resources
    runs-on: ubuntu-latest
    strategy:
      # Usamos fail-fast: false para que un fallo en un job no detenga los demás
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Process resource
        run: |
          # Obtener la lista de recursos desde el output del job anterior
          resources='${{ needs.discover-resources.outputs.resources }}'
          # Convertir el JSON en una lista y procesar cada recurso
          for resource in $(echo "$resources" | jq -r '.[]'); do
            echo "Processing $resource"
            # Aquí puedes añadir la lógica específica para cada recurso
            # Por ejemplo, ejecutar un script en la carpeta resources/$resource
            cd resources/$resource
            # Ejemplo: ejecutar un script (ajusta según tus necesidades)
            echo "Running task in $resource"
            # bash ./script.sh
            cd ../..
          done