name: Terraform CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

env:
  TF_VERSION: '1.0.0'
  TF_WORKING_DIR: './terraform'

jobs:
  terraform:
    name: 'Terraform CI/CD'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [development, staging, production]

    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Initialize Terraform
        run: terraform init -backend-config=$GITHUB_WORKSPACE/backend-config/${{ github.event.inputs.environment }}.tfbackend

      - name: Format Terraform code
        run: terraform fmt -check

      - name: Validate Terraform code
        run: terraform validate

      - name: Plan Terraform deployment
        run: terraform plan -var-file=$GITHUB_WORKSPACE/vars/${{ github.event.inputs.environment }}.tfvars

      - name: Apply Terraform deployment
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -var-file=$GITHUB_WORKSPACE/vars/${{ github.event.inputs.environment }}.tfvars

      - name: Apply Terraform deployment (Manual Trigger)
        if: github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve -var-file=$GITHUB_WORKSPACE/vars/${{ github.event.inputs.environment }}.tfvars
