name: Run with reusable steps # with composite action

on:
  workflow_dispatch: # Manually trigger the workflow
    inputs:
      job-1-input:
        type: boolean
        description: 'Input to job-1'
        required: true
      job-2-input:
        type: boolean
        description: 'Input to job-2'
        required: true

defaults:
  run:
    shell: bash

# jobs:
#   job-1:
#     runs-on: ubuntu-latest
#     if: github.event.inputs['job-1-input'] == 'true' 
#     defaults:
#       run:
#         shell: bash
#         working-directory: 'dev'
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#       - name: Print Hello World
#         run: echo "Hello World"
#       # - name: pwd
#       #   run: pwd
#       # - name: run dev.sh
#       #   run: bash dev.sh

      

#   job-2:
#     needs: job-1
#     if: github.event.inputs['job-2-input'] == 'true' || needs.job-1.result == 'skipped' # Skip this job if job-1 is skipped
#     defaults:
#       run:
#         shell: bash
#         working-directory: pro
#     runs-on: ubuntu-latest
#     # Map the job output(s) to step output(s)
#     outputs:
#       job_output: ${{ steps.reusable-steps.outputs.reusable_output }}
#     steps:
#       - uses: actions/checkout@v4

#       - name: Use reusable steps
#         id: reusable-steps
#         uses: ./.github/reusable-steps # To use this syntax, we must have the repository checked out
#         with:
#           reusable_input: "job-2-input"
#           filename: "input.txt"
#         env:
#           HELLO_WORLD_SECRET: TERCES_DLROW_OLLEH

jobs:
  a:
    name: a
    runs-on: ubuntu-latest
    steps:
      - run: echo "A"
      - id: set
        run: |
          echo "run_job_b=yes" >> $GITHUB_OUTPUT
    outputs:
      run_job_b: ${{ steps.set.outputs.run_job_b }}
  b:
    name: b
    runs-on: ubuntu-latest
    needs:
      - a
    if: needs.a.outputs.run_job_b == 'no'
    steps:
      - run: echo "B"
  c:
    name: c
    runs-on: ubuntu-latest
    needs:
      - a
      - b
    if: needs.b.result == 'success' || needs.b.result == 'skipped'
    steps:
      - run: echo "C"