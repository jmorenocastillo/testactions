name: Deploy Terraform Resources

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
  AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
  CONTAINER_NAME: tfstate
  ENVIRONMENTS: dev pre pro

jobs:
  discover-resources:
    runs-on: ubuntu-latest
    outputs:
      resources: ${{ steps.set-resources.outputs.resources }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Discover resources
        id: set-resources
        run: |
          RESOURCES=$(find . -maxdepth 1 -type d -not -path '.' -not -path './.*' -exec basename {} \; | jq -R . | jq -s . -c)
          echo "resources=$RESOURCES" >> $GITHUB_OUTPUT

  recurso1:
    needs: discover-resources
    runs-on: ubuntu-latest
    if: contains(fromJson(needs.discover-resources.outputs.resources), 'recurso1')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Deploy Terraform for recurso1
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: |
          for ENV in $ENVIRONMENTS; do
            echo "Deploying recurso1 in $ENV..."
            cd "recurso1/$ENV"
            terraform init -backend-config="storage_account_name=$AZURE_STORAGE_ACCOUNT" \
                           -backend-config="container_name=$CONTAINER_NAME" \
                           -backend-config="access_key=$AZURE_STORAGE_KEY" \
                           -backend-config="key=recurso1-$ENV.tfstate"
            terraform apply -auto-approve
            cd ../..
          done

  recurso2:
    needs: discover-resources
    runs-on: ubuntu-latest
    if: contains(fromJson(needs.discover-resources.outputs.resources), 'recurso2')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Deploy Terraform for recurso2
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: |
          for ENV in $ENVIRONMENTS; do
            echo "Deploying recurso2 in $ENV..."
            cd "recurso2/$ENV"
            terraform init -backend-config="storage_account_name=$AZURE_STORAGE_ACCOUNT" \
                           -backend-config="container_name=$CONTAINER_NAME" \
                           -backend-config="access_key=$AZURE_STORAGE_KEY" \
                           -backend-config="key=recurso2-$ENV.tfstate"
            terraform apply -auto-approve
            cd ../..
          done

  recurso3:
    needs: discover-resources
    runs-on: ubuntu-latest
    if: contains(fromJson(needs.discover-resources.outputs.resources), 'recurso3')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Deploy Terraform for recurso3
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: |
          for ENV in $ENVIRONMENTS; do
            echo "Deploying recurso3 in $ENV..."
            cd "recurso3/$ENV"
            terraform init -backend-config="storage_account_name=$AZURE_STORAGE_ACCOUNT" \
                           -backend-config="container_name=$CONTAINER_NAME" \
                           -backend-config="access_key=$AZURE_STORAGE_KEY" \
                           -backend-config="key=recurso3-$ENV.tfstate"
            terraform apply -auto-approve
            cd ../..
          done